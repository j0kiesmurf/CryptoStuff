 Cryptocurrency is open source for a reason. Foremost is transparency. Transparency must be maintained for several reasons, primarily for building trust. Trust in the developer, trust in the code itself and trust in the cryptocurrency or service. Without transparency, a developer cannot expect members of the community to trust you or your product. They would have no real reason to trust, or use your product.
 Transparency begins with open source code. Clients must be allowed to review your work and be able to verify its authenticity. Posting your project to an open source repository, such as Github, is a start. Not just uploading the source code of your project, but also uploading copies of any virus and malware scans, beta tests, and any other related materials. Including any notes and references to other projects that you might have used code from. Include original developers' names, links to projects and any copyrights or trademarks.
 Security is also very important. your blockchain or service must be secure. Free of viruses or malware, protected from DDOS attacks, 51% attacks and penetration. Maintaining security should not compromise your transparency. Your project can be both transparent as secure at the same time. Most crypto or related services are all based on the open source projects of others. It should be noted that proprietary code, original work, does not necessarily need to be part of your repository. This does not violate transparency, unless you're hiding malicious code. Keeping your personal, proprietary code secret does not violate transparency when you make sure to include all of your malware tests and other scans. It is not necessary to include specific back-end security settings, such as PHP settings(if any), SSL certificate information, or server settings. Revealing these back-end settings would compromise your security.
 Another feature of crypto is anonimity. Clients and guests should have the option to use proxies, a VPN, TOR or I2P. These services help keep your clients secure, as well as anonymous. Properly coded crypto and services can be secure and anonymous at the same time. Having one does not compromise the other. If you want people to trust your work, then you must understand that you can't sacrifice one for another. Gaining trust within the community is never a given, but by being transparent, secure and having user anonimity will give users multiple reasons to trust your work.
 A developer who abides by good practices is obviously more trustworthy than a developer who takes short cuts or who does not use good practices. Good practices are doing things that every developer should know how to do. Good practices include: Debugging code, beta testing, malware testing, keeping a changelog, maintaining a proper repository, posting contact information for you or your team, maintaing a domain, maintaining a website, maintaing updates or patches as required, and providing instructions for users to compile their own crypto wallets. Using good practices is the best way to provide a quality product, as well as gain trust within the community. 
